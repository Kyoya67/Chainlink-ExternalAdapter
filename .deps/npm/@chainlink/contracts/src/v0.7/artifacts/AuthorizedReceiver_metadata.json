{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "senders",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "changedBy",
						"type": "address"
					}
				],
				"name": "AuthorizedSendersChanged",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getAuthorizedSenders",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "isAuthorizedSender",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "senders",
						"type": "address[]"
					}
				],
				"name": "setAuthorizedSenders",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getAuthorizedSenders()": {
					"returns": {
						"_0": "array of addresses"
					}
				},
				"isAuthorizedSender(address)": {
					"params": {
						"sender": "The address of the Chainlink node"
					},
					"returns": {
						"_0": "The authorization status of the node"
					}
				},
				"setAuthorizedSenders(address[])": {
					"params": {
						"senders": "The addresses of the authorized Chainlink node"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getAuthorizedSenders()": {
					"notice": "Retrieve a list of authorized senders"
				},
				"isAuthorizedSender(address)": {
					"notice": "Use this to check if a node is authorized for fulfilling requests"
				},
				"setAuthorizedSenders(address[])": {
					"notice": "Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@chainlink/contracts/src/v0.7/AuthorizedReceiver.sol": "AuthorizedReceiver"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@chainlink/contracts/src/v0.7/AuthorizedReceiver.sol": {
			"keccak256": "0x3961993ba838c7e36467f03ccf172c0c7afb17cd7cafd727aa69514bd999bb9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0753a67763722f32893eab80ab276418de48bc5d5dd091fc66dd2200db1109a",
				"dweb:/ipfs/QmYtMdEjvxHANnMkrTBSLnHkemZHxBPgnNvLM13ZN1Jh6P"
			]
		},
		".deps/npm/@chainlink/contracts/src/v0.7/interfaces/AuthorizedReceiverInterface.sol": {
			"keccak256": "0x4276ccbc637409ab07d9baab0b72806aac938d5f180fe8bc186f64d5d376ba4e",
			"license": "MIT",
			"urls": [
				"bzz-raw://71a8ed40faa2f8fea03a8e55c6534c22bec374d134af2ea9a4a1f852b959b0c3",
				"dweb:/ipfs/QmYc4WRpNBMr2aC2srcdyCdhGcCEPt1k7LRY8Z3YnDAbwM"
			]
		}
	},
	"version": 1
}